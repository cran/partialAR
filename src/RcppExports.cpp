// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// lagged_variance_c
double lagged_variance_c(NumericVector X, int k, int n);
RcppExport SEXP partialAR_lagged_variance_c(SEXP XSEXP, SEXP kSEXP, SEXP nSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type X(XSEXP );
        Rcpp::traits::input_parameter< int >::type k(kSEXP );
        Rcpp::traits::input_parameter< int >::type n(nSEXP );
        double __result = lagged_variance_c(X, k, n);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// estimate_rho_par_c
double estimate_rho_par_c(NumericVector X);
RcppExport SEXP partialAR_estimate_rho_par_c(SEXP XSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type X(XSEXP );
        double __result = estimate_rho_par_c(X);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// estimate_par_c
NumericVector estimate_par_c(NumericVector X, double rho_max = 1.0);
RcppExport SEXP partialAR_estimate_par_c(SEXP XSEXP, SEXP rho_maxSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type X(XSEXP );
        Rcpp::traits::input_parameter< double >::type rho_max(rho_maxSEXP );
        NumericVector __result = estimate_par_c(X, rho_max);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// pvmr_par_c
double pvmr_par_c(double rho, double sigma_M, double sigma_R);
RcppExport SEXP partialAR_pvmr_par_c(SEXP rhoSEXP, SEXP sigma_MSEXP, SEXP sigma_RSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< double >::type rho(rhoSEXP );
        Rcpp::traits::input_parameter< double >::type sigma_M(sigma_MSEXP );
        Rcpp::traits::input_parameter< double >::type sigma_R(sigma_RSEXP );
        double __result = pvmr_par_c(rho, sigma_M, sigma_R);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// kalman_gain_par_mr
double kalman_gain_par_mr(double rho, double sigma_M, double sigma_R);
RcppExport SEXP partialAR_kalman_gain_par_mr(SEXP rhoSEXP, SEXP sigma_MSEXP, SEXP sigma_RSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< double >::type rho(rhoSEXP );
        Rcpp::traits::input_parameter< double >::type sigma_M(sigma_MSEXP );
        Rcpp::traits::input_parameter< double >::type sigma_R(sigma_RSEXP );
        double __result = kalman_gain_par_mr(rho, sigma_M, sigma_R);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// loglik_par_c
double loglik_par_c(NumericVector Y, double rho, double sigma_M, double sigma_R, double M0, double R0);
RcppExport SEXP partialAR_loglik_par_c(SEXP YSEXP, SEXP rhoSEXP, SEXP sigma_MSEXP, SEXP sigma_RSEXP, SEXP M0SEXP, SEXP R0SEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type Y(YSEXP );
        Rcpp::traits::input_parameter< double >::type rho(rhoSEXP );
        Rcpp::traits::input_parameter< double >::type sigma_M(sigma_MSEXP );
        Rcpp::traits::input_parameter< double >::type sigma_R(sigma_RSEXP );
        Rcpp::traits::input_parameter< double >::type M0(M0SEXP );
        Rcpp::traits::input_parameter< double >::type R0(R0SEXP );
        double __result = loglik_par_c(Y, rho, sigma_M, sigma_R, M0, R0);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// loglik_par_t_c
double loglik_par_t_c(NumericVector Y, double rho, double sigma_M, double sigma_R, double M0, double R0, double nu = 5.0);
RcppExport SEXP partialAR_loglik_par_t_c(SEXP YSEXP, SEXP rhoSEXP, SEXP sigma_MSEXP, SEXP sigma_RSEXP, SEXP M0SEXP, SEXP R0SEXP, SEXP nuSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< NumericVector >::type Y(YSEXP );
        Rcpp::traits::input_parameter< double >::type rho(rhoSEXP );
        Rcpp::traits::input_parameter< double >::type sigma_M(sigma_MSEXP );
        Rcpp::traits::input_parameter< double >::type sigma_R(sigma_RSEXP );
        Rcpp::traits::input_parameter< double >::type M0(M0SEXP );
        Rcpp::traits::input_parameter< double >::type R0(R0SEXP );
        Rcpp::traits::input_parameter< double >::type nu(nuSEXP );
        double __result = loglik_par_t_c(Y, rho, sigma_M, sigma_R, M0, R0, nu);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
